# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = fmt, lint, pre-built, unit

[vars]
src_path = {toxinidir}/src/
tst_path = {toxinidir}/tests/
lib_path = {toxinidir}/lib/charms/glauth_utils
all_path = {[vars]src_path} {[vars]tst_path} {[vars]lib_path}

[testenv]
setenv =
  PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
  PYTHONBREAKPOINT=pdb.set_trace
  PY_COLORS=1
passenv =
  PYTHONPATH
  CHARM_BUILD_DIR
  MODEL_SETTINGS

[testenv:dev]
description = Prepare local development tools
deps =
    pre-commit
    mypy
    types-PyYAML
commands =
    pre-commit install

[testenv:fmt]
description = Apply coding style standards to code
deps =
    -r{toxinidir}/fmt-requirements.txt
commands =
    isort {[vars]all_path}
    ruff format {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    -r{toxinidir}/lint-requirements.txt
commands =
    codespell {[vars]lib_path}
    codespell {toxinidir} \
              --skip {toxinidir}/.git \
              --skip {toxinidir}/.tox \
              --skip {toxinidir}/build \
              --skip {toxinidir}/lib \
              --skip {toxinidir}/venv \
              --skip {toxinidir}/.mypy_cache \
              --skip {toxinidir}/icon.svg

    isort --check-only --diff {[vars]all_path}
    ruff check --show-fixes {[vars]all_path}

[testenv:build-prerequisites]
description = Install necessary Linux packages for python dependencies
allowlist_externals =
    sudo
    apt-get
commands =
    sudo apt-get update
    sudo apt-get install -y python3-dev \
                            libldap2-dev \
                            libsasl2-dev

[testenv:unit]
description = Run unit tests
depends =
    build-prerequisites
deps =
    -r{toxinidir}/unit-requirements.txt
commands =
    coverage run --source={[vars]src_path} \
                 -m pytest \
                 --ignore={[vars]tst_path}integration \
                 --tb native \
                 -v \
                 -s \
                 {posargs}
    coverage report --data-file={toxinidir}/.coverage/.coverage
    coverage xml --data-file={toxinidir}/.coverage/.coverage

[testenv:integration]
description = Run integration tests
pass_env =
    CHARM_PATH
depends =
    build-prerequisites
deps =
    -r{toxinidir}/integration-requirements.txt
commands =
    pytest -v \
           -s \
           --tb native \
           --ignore={[vars]tst_path}unit \
           --log-cli-level=INFO \
           {posargs}

[testenv:render-database-diagram]
description = Render a diagram for the database schema
deps =
    sqlalchemy-data-model-visualizer
allowlist_externals =
    {toxinidir}/render_database_schema.py
commands =
    {toxinidir}/render_database_schema.py
